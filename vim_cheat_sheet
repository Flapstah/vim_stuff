Visual selection:
	vip - visually select paragraph
	:help objects - shows help on text objects

Ex commands:
	:<line>t. - takes specified line and pastes it below the current line without moving the cursor

Jump list:
	<C-i> - jumps forward through the jump list
	<C-o> - jumps back through the jump list
	`` - switches between last 2 positions in the jump list
	:jumps - shows jump list 

Spit window:
	<C-w>v - vertically split the current window
	<C-w>c - closes the current split

Searching:
	f - searches on the current line only
	; - next instance in this line
	, - previous instance in this line

Command List:
	q: - shows the command history

2 lines of attack:
	Visual operators:
		v{motion}{command}			e.g. vitu
			BUT this isn't repeatable with . because it'll only work on the number of chars originally selected
	Operator pending:
		g{command}{motion}			e.g. guit
			IS repeatable with . command
			
Normal Command:
	:normal <command>	- runs <command> in normal mode
		This can be used to run a normal command over a visual range by first selecting the visual range, then:
			:'<,'>normal <command> - (the '<,'> range is automatically inserted indicating the whole visual range)
		e.g.	vip
					:'<,'>normal guit

Combining the :normal and :g commands:
	:%g/\./norm @q - run @q on all lines with a . in them

Matching search expression:
	:s/fubar/&ed/g - would change 'fubar' to 'fubared'

Search command flags:
	/lang/e - searches for 'lang' and puts the cursor on the 'g' (see :help search-offset for more)
	
Use search to find the correct search pattern and then replace to use it:
	/<complex search pattern> - repeat until you find the right search pattern
	:s//<replace text/g				- to repeat the last search using <replace text>

Showing the contents of registers:
	:reg		- shows all registers
	:reg w	- shows only register w

Sourcing files:
	:source <file> - adds the commands/mappings in the file to the current vim session
		e.g. :source flapstah.vim - adds flapstah.vim to the current session
	:source % - adds the current buffer to the current vim session

